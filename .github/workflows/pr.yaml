name: on pull request
on:
  pull_request:
    branches: main

jobs:
  # check:
  #   runs-on: ubuntu-22.04
  #   strategy:
  #     matrix:
  #       node-version: [20]
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install pnpm
  #       uses: pnpm/action-setup@v4
  #       with:
  #         version: 9

  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: "pnpm"

  #     - name: Install dependencies
  #       run: pnpm install

  #     - name: Check Lint and Format
  #       run: pnpm check

  build:
    # needs: check
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - run: git submodule update --init --recursive

      - uses: mymindstorm/setup-emsdk@v14
        with:
          version: 3.1.72

      - run: |
          npm install -g typescript

      - run: |
          cd ./packages/core/lib/spz-wasm
          mkdir ./build
          em++ main.cpp \
            --std=c++17 \
            -lembind \
            --emit-tsd main.d.ts \
            -o ./build/main.mjs \
            -s USE_ZLIB=1 \
            -s WASM=1 \
            -s SINGLE_FILE=1 \
            -s MODULARIZE=1 \
            -s EXPORT_ES6=1 \
            -s EXPORT_NAME="spzwasm" \
            -s ALLOW_MEMORY_GROWTH \
            -s EXPORTED_FUNCTIONS="['_malloc', '_free']"

      - name: Install dependencies
        run: |
          pnpm install

      - name: Build
        run: pnpm build

      # - name: Build WASM and Vite projects
      #   run: |
      #     sudo chmod +x ./packages/core/lib/spz-wasm/build.sh
      #     docker run --rm --user root -v \
      #       $(pwd)/packages/core/lib/spz-wasm/:/src \
      #       -u $(id -u):$(id -g) \
      #       emscripten/emsdk \
      #       /bin/bash -ci "./build.sh"
